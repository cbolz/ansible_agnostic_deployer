---
- name: define ocp_project
  set_fact:
    ocp_project: "enmasse-{{guid}}"

- name: Create project for workload
  shell: "oc new-project {{ocp_project}}"
  ignore_errors: true
- name: Make sure we go back do default project
  shell: "oc project default"

- name: Create service account for address controller
  shell: "oc create sa enmasse-admin -n {{ocp_project}}"

- name: Add permissions for viewing OpenShift resources to default user
  shell: "oc policy add-role-to-user view system:serviceaccount:{{ocp_project}}:default -n {{ocp_project}}"

- name: Add permissions for editing OpenShift resources to admin SA
  shell: "oc policy add-role-to-user edit system:serviceaccount:{{ocp_project}}:enmasse-admin -n {{ocp_project}}"

########## create_self_signed_cert "oc" "address-controller.${NAMESPACE}.svc.cluster.local" "address-controller-cert"

- name: Create self-signed certificate for address-controller.{{ocp_project}}.svc.cluster.local
  shell: "openssl req -new -x509 -batch -nodes -days 11000 -out /tmp/{{guid}}-cert.crt -keyout /tmp/{{guid}}-key.orig -subj \"/O=io.enmasse/CN=address-controller.{{ocp_project}}.svc.cluster.local\""

- name: "Convert from PKCS#1 to PKCS#8"
  shell: "openssl pkcs8 -topk8 -inform pem -in /tmp/{{guid}}-key.orig -outform pem -nocrypt -out /tmp/{{guid}}-key"

- name: save tlskey as fact
  shell: "base64 -w 0 /tmp/{{guid}}-key"
  register: tlskey
- name: save tlscert as fact
  shell: "base64 -w 0 /tmp/{{guid}}-cert.crt"
  register: tlscrt

- name: create tls secret file
  copy:
    dest: "/tmp/{{guid}}-tls-secret"
    content: |
      {
      "apiVersion": "v1",
      "kind": "Secret",
      "metadata": {
          "name": "address-controller-cert"
      },
      "type": "kubernetes.io/tls",
      "data": {
          "tls.key": "{{tlskey.stdout}}",
          "tls.crt": "{{tlscrt.stdout}}"
      }
      }

- name: create tls secret object
  shell: "oc create -f /tmp/{{guid}}-tls-secret -n {{ocp_project}}"

####### create_self_signed_cert "oc" "none-authservice.${NAMESPACE}.svc.cluster.local" "none-authservice-cert"
- name: Create self-signed certificate for none-authservice.{{ocp_project}}.svc.cluster.local
  shell: "openssl req -new -x509 -batch -nodes -days 11000 -out /tmp/{{guid}}auth-cert.crt -keyout /tmp/{{guid}}auth-key.orig -subj \"/O=io.enmasse/CN=none-authservice.{{ocp_project}}.svc.cluster.local\""

- name: "Convert from PKCS#1 to PKCS#8"
  shell: "openssl pkcs8 -topk8 -inform pem -in /tmp/{{guid}}auth-key.orig -outform pem -nocrypt -out /tmp/{{guid}}auth-key"

- name: save tlskey as fact
  shell: "base64 -w 0 /tmp/{{guid}}auth-key"
  register: tlskeyauth
- name: save tlscert as fact
  shell: "base64 -w 0 /tmp/{{guid}}auth-cert.crt"
  register: tlscrtauth

- name: create tls secret file
  copy:
    dest: "/tmp/{{guid}}auth-tls-secret"
    content: |
      {
      "apiVersion": "v1",
      "kind": "Secret",
      "metadata": {
          "name": "none-authservice-cert"
      },
      "type": "kubernetes.io/tls",
      "data": {
          "tls.key": "{{tlskeyauth.stdout}}",
          "tls.crt": "{{tlscrtauth.stdout}}"
      }
      }

- name: create tls secret object
  shell: "oc create -f /tmp/{{guid}}auth-tls-secret -n {{ocp_project}}"


- name: Copy non autheservice file
  template:
    src: "noauth.json.j2"
    dest: /tmp/{{guid}}-noauth-template.json
- name: Create none authservice
  shell: "oc create -f /tmp/{{guid}}-noauth-template.json -n {{ocp_project}} "

- name: Copy enmasse template
  template:
    src: "enmasse.yaml.j2"
    dest: /tmp/{{guid}}-enmasse-template.yaml


- name: Create enmasse template
  shell: "oc create -f /tmp/{{guid}}-enmasse-template.yaml -n {{ocp_project}} "


- name: create payload fact
  set_fact:
    payload: "{ kind: AddressSpace , apiVersion: 'enmasse.io/v1', metadata: { name: default, namespace: {{ocp_project}} }, spec: { type: standard } }"


- name: Create configmap
  copy:
    dest: "/tmp/{{guid}}-configmap.json"
    content: |
      {
      "apiVersion": "v1",
      "kind": "ConfigMap",
      "metadata": {
        "name": "address-space-default",
        "labels": {
            "type": "address-space"
        }
      },
      "data": {
      "config.json": "{{payload}}"
      }
      }


- name: Give ocp_username access to ocp_project
  shell: "oc policy add-role-to-user admin {{ocp_username}} -n {{ocp_project}}"

- name: workload Tasks Complete
  debug:
    msg: workload Tasks Complete
