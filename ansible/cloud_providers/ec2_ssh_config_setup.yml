- name: SSH config setup
  hosts: localhost
  connection: local
  gather_facts: false
  become: false
  vars_files:
    - "{{ ANSIBLE_REPO_PATH }}/configs/{{ env_type }}/env_vars.yml"
    - "{{ ANSIBLE_REPO_PATH }}/configs/{{ env_type }}/env_secret_vars.yml"
  tags:
    - create_ssh_config
  tasks:
  - debug:
      var: groups['bastions'].0
  - name: Store bastion hostname as a fact
    set_fact:
      bastion_hostname: "{{groups['bastions'].0 }}"
      # This is where the ssh_config file will be created, this file is used to
      # define the communication method to all the hosts in the deployment
      ansible_ssh_config: "{{ ANSIBLE_REPO_PATH }}/workdir/{{ env_type }}_{{ guid }}_ssh_conf"

  - name: delete local ssh config, start fresh
    file:
      dest: "{{ ansible_ssh_config }}"
      state: absent

  - name: Create empty local ssh config
    file:
      dest: "{{ ansible_ssh_config }}"
      state: touch

  - name: Add bastion proxy config to workdir ssh config file
    blockinfile:
      dest: "{{ ansible_ssh_config }}"
      marker: "##### {mark} ADDED BASTION PROXY HOST {{ env_type }}-{{ guid }} ######"
      content: |
          Host {{ bastion_hostname }}
            Hostname {{ bastion_hostname }}
            IdentityFile ~/.ssh/{{ key_name }}.pem
            IdentitiesOnly yes
            User {{ remote_user }}
            ControlMaster auto
            ControlPath /tmp/{{ guid }}-%h-%r
            ControlPersist 5m
            StrictHostKeyChecking no
    tags:
      - bastion_proxy_config_main

  - name: Add all hosts to workdir ssh config file
    blockinfile:
      dest: "{{ ansible_ssh_config }}"
      marker: "##### {mark} ADDED Node Proxy Config  {{ item }} {{ env_type }}-{{ guid }} ######"
      block: |
          Host {{ item }} {{  hostvars[item].public_ip_address | default('') }}
            Hostname {{ hostvars[item].private_dns_name | default(item) }}
            User {{ remote_user }}
            IdentityFile ~/.ssh/{{ key_name }}.pem
            ProxyCommand ssh -F {{ ansible_ssh_config }} {{ bastion_hostname }} -W %h:%p
            StrictHostKeyChecking no
    when: item != bastion_hostname
    with_items: "{{ groups['all'] }}"
    tags:
      - bastion_proxy_config_hosts

- name: Set ssh extra args for all hosts, use ssh_config just created
  hosts: all
  gather_facts: false
  any_errors_fatal: true
  ignore_errors: false
  tags:
    - step001
    - ssh_args
  tasks:
    - name: add -F option ansible_ssh_extra_args
      set_fact:
        ansible_ssh_extra_args: "{{ ansible_ssh_extra_args }} -F {{ hostvars['localhost'].ansible_ssh_config }}"
